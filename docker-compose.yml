version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    command:
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--entrypoints.web.address=:4000"
      - "--entrypoints.ws.address=:3000"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.chrome.address=:9222"
      - "--log.level=DEBUG"
      - "--api.debug=true"
      - "--api.insecure=true"
      - "--serverstransport.insecureSkipVerify=true"
    ports:
      - "80:80"
      - "443:443"
      - "4000:4000"
      - "8080:8080"
      - "3000:3000"
      - "9222:9222"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - proxy
    deploy:
      placement:
        constraints:
          - node.role == manager
      replicas: 1
      restart_policy:
        condition: on-failure
    labels:
      # - "traefik.http.middlewares.puppeteer-header-sticky.plugin.traefik-sticky-headers.headerName=X-Session-ID"
      - "traefik.http.middlewares.puppeteer-header-sticky.sticky.cookie=true"
      - "traefik.http.middlewares.puppeteer-header-sticky.sticky.cookie.name=X-Session-ID"
      - "traefik.http.middlewares.puppeteer-header-sticky.sticky.cookie.httpOnly=true"
      - "traefik.http.middlewares.puppeteer-header-sticky.sticky.cookie.secure=false"
      - "traefik.http.middlewares.puppeteer-header-sticky.sticky.header=true"
      - "traefik.http.middlewares.puppeteer-header-sticky.sticky.header.name=X-Session-ID"
      - "traefik.http.routers.puppeteer.middlewares=puppeteer-header-sticky"

  browser-service:
    image: browser-service:latest
    restart: always
    build:
      context: ./browser
      dockerfile: Dockerfile
    environment:
      - EXPRESS_PORT=3000
      - DEBUG_PORT=9222
      - PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium
    env_file:
      - .env
    networks:
      - proxy
    volumes:
      - ./browser/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
    deploy:
      mode: replicated
      replicas: 2
      resources:
        limits:
          cpus: "1.5"
          memory: "3G"
        reservations:
          memory: "1G"
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"

        # ===== Роутер для Express (HTTP) /ws-endpoint =====
        - "traefik.http.routers.ws.rule=PathPrefix(`/ws-endpoint`)"
        - "traefik.http.routers.ws.entrypoints=ws"
        - "traefik.http.routers.ws.service=ws-service"
        - "traefik.http.services.ws-service.loadbalancer.server.port=3000"
        - "traefik.http.services.ws-service.loadbalancer.sticky.cookie=true"
        - "traefik.http.services.ws-service.loadbalancer.sticky.cookie.name=X-Session-ID"
        - "traefik.http.services.ws-service.loadbalancer.sticky.cookie.secure=false"

        # ===== Роутер для DevTools (WebSocket) /devtools =====
        - "traefik.http.routers.chrome.rule=PathPrefix(`/devtools`)"
        - "traefik.http.routers.chrome.entrypoints=chrome"
        - "traefik.http.routers.chrome.service=chrome-service"
        - "traefik.http.services.chrome-service.loadbalancer.server.port=9222"
        - "traefik.http.services.chrome-service.loadbalancer.sticky.cookie=true"
        - "traefik.http.services.chrome-service.loadbalancer.sticky.cookie.name=X-Session-ID"
        - "traefik.http.services.chrome-service.loadbalancer.sticky.cookie.secure=false"

        # ===== Middleware для WebSocket Upgrade (для DevTools) =====
        - "traefik.http.middlewares.ws-headers.headers.customRequestHeaders.Upgrade=websocket"
        - "traefik.http.middlewares.ws-headers.headers.customRequestHeaders.Connection=Upgrade"
        - "traefik.http.routers.chrome.middlewares=ws-headers"

  puppeteer-client:
    image: puppeteer-client:latest
    build:
      context: ./client
      dockerfile: Dockerfile
    environment:
      - PORT=4000
    env_file:
      - .env
    networks:
      - proxy
    deploy:
      mode: replicated
      replicas: 10
      resources:
        limits:
          cpus: "0.2"
          memory: "100M"
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.puppeteer.rule=PathPrefix(`/`)"
        - "traefik.http.routers.puppeteer.entrypoints=web"
        - "traefik.http.services.puppeteer-service.loadbalancer.server.port=4000"
        - "traefik.http.services.puppeteer-service.loadbalancer.server.scheme=http"
        - "traefik.http.services.puppeteer-service.loadbalancer.sticky.cookie=true"
        - "traefik.http.services.puppeteer-service.loadbalancer.sticky.cookie.name=X-Session-ID"
        - "traefik.http.services.puppeteer-service.loadbalancer.sticky.cookie.secure=false"
        - "traefik.http.services.puppeteer-service.loadbalancer.sticky.cookie.httpOnly=true"
        - "traefik.http.services.puppeteer-service.loadbalancer.sticky.cookie.sameSite=strict"
        - "traefik.http.middlewares.pass-host-header.headers.customRequestHeaders.Host=puppeteer-client"
        - "traefik.http.routers.puppeteer.middlewares=pass-host-header"

  redis:
    image: redis:alpine
    restart: always
    networks:
      - proxy
    command: redis-server --save 60 1 --loglevel warning
    labels:
      - "traefik.enable=false"

networks:
  proxy:
    external: true
